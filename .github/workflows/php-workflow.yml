name: Reusable PHP Workflow

on:
  workflow_call:
    inputs:
      phpVersion:
        required: true
        type: string
      composerFile:
        required: false
        type: string
        default: 'composer.json'
    secrets:
      composerAuth:
        required: true
      codeClimateId:
        required: true
      securityToken:
        required: true

jobs:
  setup:
    name: Composer Setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: wakeforestuniversity/wfu-github/.github/actions/php-cache-restore@v1
        id: cache-composer
        with:
          php-version: ${{ inputs.phpVersion }}

      - name: Validate composer.json and composer.lock
        run: COMPOSER=${{ inputs.composerFile }} composer validate

      - name: Install Dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{secrets.composerAuth}}"} }'
        run: COMPOSER=${{ inputs.composerFile }} composer install
        if: steps.cache-composer.outputs.cache-hit != 'true'

  composer:
    name: Composer Validation
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: wakeforestuniversity/wfu-github/.github/actions/php-cache-restore@v1
        id: cache-composer
        with:
          php-version: ${{ inputs.phpVersion }}

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "composer-dev.json, composer-uat.json, composer-pprd.json, composer-prod.json"

      - name: Validate composer-dev.json if it exists.
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER=composer-dev.json composer validate

      - name: Validate composer-uat.json if it exists.
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER=composer-uat.json composer validate

      - name: Validate composer-pprd.json if it exists.
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER=composer-pprd.json composer validate

      - name: Validate composer-prod.json if it exists.
        if: steps.check_files.outputs.files_exists == 'true'
        run: COMPOSER=composer-prod.json composer validate

  testing:
    name: Testing and Code Coverage (Code Climate)
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: wakeforestuniversity/wfu-github/.github/actions/php-cache-restore@v1
        id: cache-composer
        with:
          php-version: ${{ inputs.phpVersion }}

      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeClimateId }}
        with:
          coverageCommand: vendor/bin/phpunit --coverage-clover clover.xml
          debug: true

  security:
    name: Security (Snyk)
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: wakeforestuniversity/wfu-github/.github/actions/php-cache-restore@v1
        id: cache-composer
        with:
          php-version: ${{ inputs.phpVersion }}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/php@master
        env:
          SNYK_TOKEN: ${{ secrets.securityToken }}
        with:
          args: --severity-threshold=low --all-projects
